create TABLE admin(admin_id int PRIMARY KEY AUTO_INCREMENT,
                  name varchar,
                  email varchar UNIQUE,
                  password varchar,
                  contact int)AUTO_INCREMENT=101;

CREATE TABLE `petspa`.`admin` ( `admin_id` INT(3) NOT NULL ,
 `name` VARCHAR(25) NOT NULL ,
 `email` VARCHAR(25) NOT NULL ,
 `password` VARCHAR(20) NOT NULL ,
 `contact` INT(10) NOT NULL ,
 PRIMARY KEY (`admin_id`(3)),
 UNIQUE `email` (`email`));


CREATE TABLE `shops` ( `shop_id` INT(4) PRIMARY KEY AUTO_INCREMENT ,
 `shop_name` VARCHAR(25) NOT NULL ,
 `shop_address` VARCHAR(50) NOT NULL ,
 `shop_license` VARCHAR(30) NOT NULL ,
 `shop_contact` INT(10) NOT NULL ,
 `shop_email` VARCHAR(20) NOT NULL ,
 `password` VARCHAR(20) NOT NULL ,
 `owner_name` VARCHAR(25) NOT NULL ,
 `owner_contact` INT(10) NOT NULL ,
 `start_time` TIME NOT NULL ,
 `end_time` TIME NOT NULL ,
 `date` DATE NOT NULL DEFAULT CURRENT_DATE())AUTO_INCREMENT=2000;

CREATE TABLE `customer` ( `customer_id` INT(4) PRIMARY KEY AUTO_INCREMENT ,
 `cust_name` VARCHAR(25) NOT NULL ,
 `cust_email` VARCHAR(30) UNIQUE ,
 `cust_address` VARCHAR(50) NOT NULL ,
 `cust_contact` INT(10) NOT NULL ,
 `password` VARCHAR(20) NOT NULL ,
 `DOB` DATE NOT NULL,
`Date` DATE NOT NULL DEFAULT CURRENT_DATE()) AUTO_INCREMENT=3000;

CREATE TABLE `pets` ( `pet_id` INT(4) PRIMARY KEY AUTO_INCREMENT ,
 `pet_name` VARCHAR(25) NOT NULL ,
 `gender` VARCHAR(10) NOT NULL ,
 `DOB` DATE NOT NULL ,
 `pet_breed` VARCHAR(20) NOT NULL ,
 `age` integer(3) NOT NULL ,
 `cust_id` integer(4) NOT NULL ,
 `date` DATE NOT NULL DEFAULT CURRENT_DATE(),
CONSTRAINT pcust_id FOREIGN KEY(cust_id) REFERENCES customer(customer_id))AUTO_INCREMENT=5000;

INSERT INTO `shops` (`shop_id`, `shop_name`,
 `shop_address`, `shop_license`,
 `shop_contact`, `shop_email`,
 `passwords`, `owner_name`,
 `owner_contact`,
 `start_time`, `end_time`, `date`) 
VALUES (NULL, 'dfghj', 'dfghjk', 'dfghjk', '45678', 'erty@rty',
 'rtyu', 'vhbjnkm', '33333', '2', '2', 'curdate()')


CREATE TABLE `shoptreat` ( `shop_id` INT(4) ,
 `treat_id` INT(4) NOT NULL ,
 `price` INT(5) NOT NULL,
                          CONSTRAINT PRIMARY Key(shop_id,treat_id),
CONSTRAINT tshop_id FOREIGN KEY(shop_id) REFERENCES shops(shop_id)on delete CASCADE,
CONSTRAINT ttreat_id FOREIGN KEY(treat_id) REFERENCES treatlist(treat_id)on delete cascade);


SELECT S.shop_name, T.treat_name,P.pet_name,B.book_id,B.date,B.slot_time,B.price from `shops` as S ,
 `shoptreat` as X, `treatlist` as T,`pets` as P, `booking` as B 
 WHERE S.shop_id=B.shop_id and
  T.treat_id=X.treat_id and
   B.treat_id=X.treat_id and
    P.pet_id=B.pet_id;


SELECT S.shop_name, C.customer_id ,T.treat_name,P.pet_name,B.book_id,B.date,B.slot_time,
B.total_price from `shops` as S , `shoptreat` as X, `treatlist` as T,`pets` as P,
 `booking` as B, `customer` as C WHERE S.shop_id=B.shop_id and
  T.treat_id=X.treat_id and B.treat_id=X.treat_id and
   P.pet_id=B.pet_id and C.customer_id=B.cust_id group by book_id;